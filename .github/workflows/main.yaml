name: Main

on:
  push:
    branches:
      - "main"
    tags:
      - "v*"
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Print GitHub context (for debug)
        run: echo "$GITHUB_CONTEXT"
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - name: Setup Node.js
        uses: actions/setup-node@v2.1.5
        with:
          node-version: "14.15.1"

      # https://github.com/actions/cache/blob/v2/examples.md#macos-and-ubuntu
      - name: Cache dependencies
        id: npm-cache
        uses: actions/cache@v2.1.4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: TSOA generation
        run: .ci/check-if-tsoa-files-are-updated.sh

      - name: Typescript compilation
        run: npm run ts:check

      - name: Typescript linting
        run: npm run lint

      - name: Unit tests (no secrets)
        # dependabot has no access to secrets - cf https://github.blog/changelog/2021-02-19-github-actions-workflows-triggered-by-dependabot-prs-will-run-with-read-only-permissions/
        run: npm run test:no-secrets

      - name: Unit tests (need secrets)
        # we expect this to be a json
        if: ${{ contains(env.TEST_CREDENTIALS, '{') }}
        run: npm run test:need-secrets
        env:
          # some tests need credentials when hitting github endpoints - see src/infra/github/__testTools__/secrets.ts.sample
          TEST_CREDENTIALS: ${{ secrets.TEST_CREDENTIALS }}

  build:
    needs: test
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v2.2.0
        with:
          images: ghcr.io/tsimbalar/gha-build-monitor
          tag-sha: true
          tag-semver: |
            {{version}}
            {{major}}.{{minor}}

      - name: Set build info
        run: .ci/set-build-info.sh

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
